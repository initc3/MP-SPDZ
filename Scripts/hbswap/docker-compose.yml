version: '3.8'

volumes:
  public-keys:
  secrets-p0:
  secrets-p1:
  secrets-p2:
  secrets-p3:

services:

  eth.chain:
    image: ethereum/client-go:latest
    working_dir: /usr/src/
    volumes:
      - ./scripts/chain.sh:/usr/src/chain.sh
      - ./poa:/opt/hbswap/poa
    entrypoint: ""
    command: sh chain.sh

  contract.deploy:
    image: hbswap-go
    build:
      context: .
      dockerfile: contract.Dockerfile
      target: deploy
    working_dir: /go/src/github.com/initc3/MP-SPDZ/Scripts/hbswap/go
    volumes:
      - ./scripts/wait-for-it.sh:/usr/local/bin/wait-for-it
      - .:/go/src/github.com/initc3/MP-SPDZ/Scripts/hbswap
    depends_on:
      - eth.chain
    entrypoint: ""
    command: ["wait-for-it", "eth.chain:8545", "--", "go", "run", "deploy/deploy.go", "eth.chain"]

  # trader
  client.public.deposit:
    image: hbswap-go
    build:
      context: .
      dockerfile: contract.Dockerfile
      target: client
    working_dir: /go/src/github.com/initc3/MP-SPDZ/Scripts/hbswap
    volumes:
      - ./scripts/wait-for-it.sh:/usr/local/bin/wait-for-it
      - .:/go/src/github.com/initc3/MP-SPDZ/Scripts/hbswap
    depends_on:
      - contract.deploy
    entrypoint: ""
    # TODO wait for contract to be deployed/available
    command: ["bash", "scripts/client-public-deposit.sh", "eth.chain"]

  # liquidity provider
  pool.init:
    image: hbswap-go
    build:
      context: .
      dockerfile: contract.Dockerfile
      target: client
    working_dir: /go/src/github.com/initc3/MP-SPDZ/Scripts/hbswap
    volumes:
      - ./scripts/wait-for-it.sh:/usr/local/bin/wait-for-it
      - .:/go/src/github.com/initc3/MP-SPDZ/Scripts/hbswap
    depends_on:
      - contract.deploy
    entrypoint: ""
    # TODO wait for contract to be deployed/available
    command: ["bash", "scripts/init-pool.sh", "eth.chain"]

  # trader
  client.secret.deposit:
    image: hbswap-go
    build:
      context: .
      dockerfile: contract.Dockerfile
      target: client
    working_dir: /go/src/github.com/initc3/MP-SPDZ/Scripts/hbswap
    volumes:
      - ./scripts/wait-for-it.sh:/usr/local/bin/wait-for-it
      - .:/go/src/github.com/initc3/MP-SPDZ/Scripts/hbswap
    depends_on:
      - contract.deploy
    entrypoint: ""
    # TODO wait for contract to be deployed/available
    command: ["bash", "scripts/client-secret-deposit.sh", "eth.chain"]

  mpc.trusted.setup:
    image: hbswap-setup
    build:
      context: .
      dockerfile: setup.Dockerfile
    working_dir: /usr/src
    volumes:
      - ../../Scripts/setup-ssl.sh:/usr/src/setup-ssl.sh
      - ./scripts/generate-keys.sh:/usr/src/generate-keys.sh
      - public-keys:/usr/src/Player-Data
      - secrets-p0:/usr/src/Secrets-P0
      - secrets-p1:/usr/src/Secrets-P1
      - secrets-p2:/usr/src/Secrets-P2
      - secrets-p3:/usr/src/Secrets-P3
    #command: ["bash", "setup-ssl.sh", "4"]
    command: ["bash", "generate-keys.sh", "setup-ssl.sh", "4"]

  # compile MPC programs (hbswap_init, hbswap_trade_prep, hbswap_trade)
  # see scripts/compile.sh for details
  mpc.compile:
    image: python:3.8
    working_dir: /usr/src
    volumes:
      - ../../compile.py:/usr/src/compile.py
      - ../../Compiler:/usr/src/Compiler
      - ../../Programs:/usr/src/Programs
      - ./scripts/compile.sh:/usr/src/compile.sh
    command: ["bash", "compile.sh"]

  # NOTE Run all (4) nodes in one container. Can be useful for troubleshooting.
  #mpc.init.nodes:
  #  image: hbswap-mpc-init
  #  build:
  #    context: ../..
  #    dockerfile: hbswap.Dockerfile
  #    target: mp-spdz
  #  working_dir: /usr/src/MP-SPDZ
  #  volumes:
  #    - ../../CONFIG:/usr/src/MP-SPDZ/CONFIG
  #    - ../../Makefile:/usr/src/MP-SPDZ/Makefile
  #    - ../../Programs/Bytecode:/usr/src/MP-SPDZ/Programs/Bytecode
  #    - ../../Programs/Schedules:/usr/src/MP-SPDZ/Programs/Schedules
  #    - ./scripts/mpc-prep.sh:/usr/src/MP-SPDZ/mpc-prep.sh
  #    #- ../../Player-Data:/usr/src/MP-SPDZ/Player-Data
  #    - tls-keys:/usr/src/MP-SPDZ/Player-Data
  #    - pool-data:/usr/src/MP-SPDZ/Persistence
  #  command: ["bash", "mpc-prep.sh"]

  ############################################################################
  #                                                                          #
  #                               INIT PHASE                                 #
  #                                                                          #
  ############################################################################
  mpc.init.node.0:
    image: hbswap-mpc-init
    build:
      context: ../..
      dockerfile: hbswap.Dockerfile
      target: mp-spdz
    working_dir: /usr/src/MP-SPDZ
    volumes:
      - ../../CONFIG:/usr/src/MP-SPDZ/CONFIG
      - ../../Makefile:/usr/src/MP-SPDZ/Makefile
      - ../../Programs/Bytecode:/usr/src/MP-SPDZ/Programs/Bytecode
      - ../../Programs/Schedules:/usr/src/MP-SPDZ/Programs/Schedules
      - ./scripts/mpc-init.sh:/usr/src/MP-SPDZ/mpc-init.sh
      - public-keys:/opt/hbswap/public-keys:ro
      - secrets-p0:/opt/hbswap/secrets
      #- pool-data-P0:/usr/src/MP-SPDZ/Persistence
    # NOTE IMPORTANT!
    # The hostname (2nd arg) must be the one of player 0, i.e. "mpc.node.0"
    command: ["bash", "mpc-init.sh", "0", "mpc.init.node.0"]

  mpc.init.node.1:
    image: hbswap-mpc-init
    build:
      context: ../..
      dockerfile: hbswap.Dockerfile
      target: mp-spdz
    working_dir: /usr/src/MP-SPDZ
    volumes:
      - ../../CONFIG:/usr/src/MP-SPDZ/CONFIG
      - ../../Makefile:/usr/src/MP-SPDZ/Makefile
      - ../../Programs/Bytecode:/usr/src/MP-SPDZ/Programs/Bytecode
      - ../../Programs/Schedules:/usr/src/MP-SPDZ/Programs/Schedules
      - ./scripts/mpc-init.sh:/usr/src/MP-SPDZ/mpc-init.sh
      - public-keys:/opt/hbswap/public-keys:ro
      - secrets-p1:/opt/hbswap/secrets
      #- pool-data-P1:/usr/src/MP-SPDZ/Persistence
    # NOTE IMPORTANT!
    # The hostname (2nd arg) must be the one of player 0, i.e. "mpc.node.0"
    command: ["bash", "mpc-init.sh", "1", "mpc.init.node.0"]

  mpc.init.node.2:
    image: hbswap-mpc-init
    build:
      context: ../..
      dockerfile: hbswap.Dockerfile
      target: mp-spdz
    working_dir: /usr/src/MP-SPDZ
    volumes:
      - ../../CONFIG:/usr/src/MP-SPDZ/CONFIG
      - ../../Makefile:/usr/src/MP-SPDZ/Makefile
      - ../../Programs/Bytecode:/usr/src/MP-SPDZ/Programs/Bytecode
      - ../../Programs/Schedules:/usr/src/MP-SPDZ/Programs/Schedules
      - ./scripts/mpc-init.sh:/usr/src/MP-SPDZ/mpc-init.sh
      - public-keys:/opt/hbswap/public-keys:ro
      - secrets-p2:/opt/hbswap/secrets
      #- pool-data-P2:/usr/src/MP-SPDZ/Persistence
    # NOTE IMPORTANT!
    # The hostname (2nd arg) must be the one of player 0, i.e. "mpc.node.0"
    command: ["bash", "mpc-init.sh", "2", "mpc.init.node.0"]

  mpc.init.node.3:
    image: hbswap-mpc-init
    build:
      context: ../..
      dockerfile: hbswap.Dockerfile
      target: mp-spdz
    working_dir: /usr/src/MP-SPDZ
    volumes:
      - ../../CONFIG:/usr/src/MP-SPDZ/CONFIG
      - ../../Makefile:/usr/src/MP-SPDZ/Makefile
      - ../../Programs/Bytecode:/usr/src/MP-SPDZ/Programs/Bytecode
      - ../../Programs/Schedules:/usr/src/MP-SPDZ/Programs/Schedules
      - ./scripts/mpc-init.sh:/usr/src/MP-SPDZ/mpc-init.sh
      - public-keys:/opt/hbswap/public-keys:ro
      - secrets-p3:/opt/hbswap/secrets
      #- pool-data-P3:/usr/src/MP-SPDZ/Persistence
    # NOTE IMPORTANT!
    # The hostname (2nd arg) must be the one of player 0, i.e. "mpc.node.0"
    command: ["bash", "mpc-init.sh", "3", "mpc.init.node.0"]

    #mpc.nodes:
    #  image: hbswap-mpc
    #  build:
    #    context: ../..
    #    dockerfile: hbswap.Dockerfile
    #    target: hbswap
    #  working_dir: /usr/src/MP-SPDZ
    #  volumes:
    #    - ../../CONFIG:/usr/src/MP-SPDZ/CONFIG
    #    - ../../Makefile:/usr/src/MP-SPDZ/Makefile
    #    #- ../../Player-Data:/usr/src/MP-SPDZ/Player-Data
    #    - tls-keys:/usr/src/MP-SPDZ/Player-Data
    #    - ../../Programs/Bytecode:/usr/src/MP-SPDZ/Programs/Bytecode
    #    - ../../Programs/Schedules:/usr/src/MP-SPDZ/Programs/Schedules
    #    - ./scripts/mpc.sh:/usr/src/MP-SPDZ/mpc.sh
    #    - .:/usr/src/MP-SPDZ/Scripts/hbswap
    #    - .:/go/src/github.com/initc3/MP-SPDZ/Scripts/hbswap
    #    - pool-data:/usr/src/MP-SPDZ/Scripts/hbswap/data
    #      #- pool-data/Transactions-P0.data:Scripts/hbswap/data/Pool-P0.data
    #      #- pool-data/Transactions-P1.data:Scripts/hbswap/data/Pool-P1.data
    #      #- pool-data/Transactions-P2.data:Scripts/hbswap/data/Pool-P2.data
    #      #- pool-data/Transactions-P3.data:Scripts/hbswap/data/Pool-P3.data
    #  command: ["bash", "mpc.sh", "eth.chain"]

  mpc.node.0:
    image: hbswap-mpc
    build:
      context: ../..
      dockerfile: hbswap.Dockerfile
      target: hbswap
    working_dir: /usr/src/MP-SPDZ
    volumes:
      - ../../CONFIG:/usr/src/MP-SPDZ/CONFIG
      - ../../Makefile:/usr/src/MP-SPDZ/Makefile
      - ../../Programs/Bytecode:/usr/src/MP-SPDZ/Programs/Bytecode
      - ../../Programs/Schedules:/usr/src/MP-SPDZ/Programs/Schedules
      - ./scripts/mpc-node.sh:/usr/src/MP-SPDZ/mpc-node.sh
      - .:/usr/src/MP-SPDZ/Scripts/hbswap
      - .:/go/src/github.com/initc3/MP-SPDZ/Scripts/hbswap
      - public-keys:/opt/hbswap/public-keys:ro
      - secrets-p0:/opt/hbswap/secrets
    # NOTE IMPORTANT!
    # The hostname (2nd arg) must be the one of player 0, i.e. "mpc.node.0"
    command: ["bash", "mpc-node.sh", "0", "eth.chain", "mpc.node.0"]

  mpc.node.1:
    image: hbswap-mpc
    build:
      context: ../..
      dockerfile: hbswap.Dockerfile
      target: hbswap
    working_dir: /usr/src/MP-SPDZ
    volumes:
      - ../../CONFIG:/usr/src/MP-SPDZ/CONFIG
      - ../../Makefile:/usr/src/MP-SPDZ/Makefile
      - ../../Programs/Bytecode:/usr/src/MP-SPDZ/Programs/Bytecode
      - ../../Programs/Schedules:/usr/src/MP-SPDZ/Programs/Schedules
      - ./scripts/mpc-node.sh:/usr/src/MP-SPDZ/mpc-node.sh
      - .:/usr/src/MP-SPDZ/Scripts/hbswap
      - .:/go/src/github.com/initc3/MP-SPDZ/Scripts/hbswap
      - public-keys:/opt/hbswap/public-keys:ro
      - secrets-p1:/opt/hbswap/secrets
    # NOTE IMPORTANT!
    # The hostname (2nd arg) must be the one of player 0, i.e. "mpc.node.0"
    command: ["bash", "mpc-node.sh", "1", "eth.chain", "mpc.node.0"]

  mpc.node.2:
    image: hbswap-mpc
    build:
      context: ../..
      dockerfile: hbswap.Dockerfile
      target: hbswap
    working_dir: /usr/src/MP-SPDZ
    volumes:
      - ../../CONFIG:/usr/src/MP-SPDZ/CONFIG
      - ../../Makefile:/usr/src/MP-SPDZ/Makefile
      - ../../Programs/Bytecode:/usr/src/MP-SPDZ/Programs/Bytecode
      - ../../Programs/Schedules:/usr/src/MP-SPDZ/Programs/Schedules
      - ./scripts/mpc-node.sh:/usr/src/MP-SPDZ/mpc-node.sh
      - .:/usr/src/MP-SPDZ/Scripts/hbswap
      - .:/go/src/github.com/initc3/MP-SPDZ/Scripts/hbswap
      - public-keys:/opt/hbswap/public-keys:ro
      - secrets-p2:/opt/hbswap/secrets
    # NOTE IMPORTANT!
    # The hostname (2nd arg) must be the one of player 0, i.e. "mpc.node.0"
    command: ["bash", "mpc-node.sh", "2", "eth.chain", "mpc.node.0"]

  mpc.node.3:
    image: hbswap-mpc
    build:
      context: ../..
      dockerfile: hbswap.Dockerfile
      target: hbswap
    working_dir: /usr/src/MP-SPDZ
    volumes:
      - ../../CONFIG:/usr/src/MP-SPDZ/CONFIG
      - ../../Makefile:/usr/src/MP-SPDZ/Makefile
      - ../../Programs/Bytecode:/usr/src/MP-SPDZ/Programs/Bytecode
      - ../../Programs/Schedules:/usr/src/MP-SPDZ/Programs/Schedules
      - ./scripts/mpc-node.sh:/usr/src/MP-SPDZ/mpc-node.sh
      - .:/usr/src/MP-SPDZ/Scripts/hbswap
      - .:/go/src/github.com/initc3/MP-SPDZ/Scripts/hbswap
      - public-keys:/opt/hbswap/public-keys:ro
      - secrets-p3:/opt/hbswap/secrets
    # NOTE IMPORTANT!
    # The hostname (2nd arg) must be the one of player 0, i.e. "mpc.node.0"
    command: ["bash", "mpc-node.sh", "3", "eth.chain", "mpc.node.0"]

  client:
    image: hbswap-mpc
    build:
      context: ../..
      dockerfile: hbswap.Dockerfile
      target: hbswap
    working_dir: /usr/src/MP-SPDZ
    volumes:
      - ./scripts/client.sh:/usr/src/MP-SPDZ/client.sh
      - ./scripts/wait-for-it.sh:/usr/local/bin/wait-for-it
      - .:/usr/src/MP-SPDZ/Scripts/hbswap
      - .:/go/src/github.com/initc3/MP-SPDZ/Scripts/hbswap
    command: ["wait-for-it", "mpc.node.3:8080", "--", "bash", "client.sh", "eth.chain"]
